{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexanderramirez/DEV/todoNicho/components/ListItem.js\";\nimport React, { Component } from 'react';\nimport css from '../static/css/index.css';\n\nvar ListItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListItem, _Component);\n\n  function ListItem(props) {\n    var _this;\n\n    _classCallCheck(this, ListItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListItem).call(this, props));\n    _this.state = {\n      isEditMode: false,\n      newItemValue: ''\n    };\n    _this.editItem = _this.editItem.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.inputRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(ListItem, [{\n    key: \"editItem\",\n    value: function editItem(text) {\n      this.setState({\n        isEditMode: true,\n        newItemValue: text\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      console.log('OVER HERE!!', e, this.inputRef);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          item = _this$props.item,\n          itemNumber = _this$props.itemNumber;\n\n      if (this.state.isEditMode) {\n        console.log('OVER HERE!!', this.inputRef);\n        this.inputRef.current.focus();\n      }\n\n      return this.state.isEditMode ? React.createElement(\"form\", {\n        className: css.form,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: this.inputRef,\n        type: \"text\",\n        value: this.state.inputValue,\n        onChange: this.updateInputValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \" update \")) : React.createElement(\"div\", {\n        className: css.listItem,\n        key: itemNumber.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, itemNumber + 1, \". \"), React.createElement(\"h3\", {\n        onClick: function onClick() {\n          return _this2.editItem(item.text);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, item.text), React.createElement(\"button\", {\n        className: css.doneButton,\n        onClick: function onClick() {\n          return props.deleteItem(itemNumber);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"done\"));\n    }\n  }]);\n\n  return ListItem;\n}(Component);\n\nexport { ListItem as default };","map":{"version":3,"sources":["/Users/alexanderramirez/DEV/todoNicho/components/ListItem.js"],"names":["React","Component","css","ListItem","props","state","isEditMode","newItemValue","editItem","bind","handleSubmit","inputRef","createRef","text","setState","e","preventDefault","console","log","item","itemNumber","current","focus","form","inputValue","updateInputValue","listItem","toString","doneButton","deleteItem"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;IAEqBC,Q;;;;;AACjB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB;AACA,UAAKE,QAAL,GAAgBX,KAAK,CAACY,SAAN,EAAhB;AARe;AASlB;;;;6BAEQC,I,EAAM;AACX,WAAKC,QAAL,CAAc;AACVR,QAAAA,UAAU,EAAE,IADF;AAEVC,QAAAA,YAAY,EAAEM;AAFJ,OAAd;AAIH;;;iCAEYE,C,EAAG;AACZA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,CAA3B,EAA8B,KAAKJ,QAAnC;AACH;;;6BAEQ;AAAA;;AAAA,wBAID,KAAKP,KAJJ;AAAA,UAEDe,IAFC,eAEDA,IAFC;AAAA,UAGDC,UAHC,eAGDA,UAHC;;AAML,UAAI,KAAKf,KAAL,CAAWC,UAAf,EAA2B;AACvBW,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B,KAAKP,QAAhC;AACA,aAAKA,QAAL,CAAcU,OAAd,CAAsBC,KAAtB;AACH;;AAED,aAAO,KAAKjB,KAAL,CAAWC,UAAX,GACH;AAAM,QAAA,SAAS,EAAEJ,GAAG,CAACqB,IAArB;AAA2B,QAAA,QAAQ,EAAE,KAAKb,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,GAAG,EAAE,KAAKC,QAAjB;AAA2B,QAAA,IAAI,EAAC,MAAhC;AAAuC,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWmB,UAAzD;AAAqE,QAAA,QAAQ,EAAE,KAAKC,gBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADG,GAMH;AAAK,QAAA,SAAS,EAAEvB,GAAG,CAACwB,QAApB;AAA8B,QAAA,GAAG,EAAEN,UAAU,CAACO,QAAX,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKP,UAAU,GAAG,CAAlB,OADJ,EAEI;AAAI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACZ,QAAL,CAAcW,IAAI,CAACN,IAAnB,CAAN;AAAA,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8CM,IAAI,CAACN,IAAnD,CAFJ,EAGI;AAAQ,QAAA,SAAS,EAAEX,GAAG,CAAC0B,UAAvB;AAAmC,QAAA,OAAO,EAAE;AAAA,iBAAMxB,KAAK,CAACyB,UAAN,CAAiBT,UAAjB,CAAN;AAAA,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CANJ;AAYH;;;;EA/CiCnB,S;;SAAjBE,Q","sourcesContent":["import React, { Component } from 'react';\nimport css from '../static/css/index.css';\n\nexport default class ListItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEditMode: false,\n            newItemValue: ''\n        };\n        this.editItem = this.editItem.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.inputRef = React.createRef();\n    }\n\n    editItem(text) {\n        this.setState({\n            isEditMode: true,\n            newItemValue: text\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        console.log('OVER HERE!!', e, this.inputRef);\n    }\n\n    render() {\n        const {\n            item,\n            itemNumber\n        } = this.props;\n\n        if (this.state.isEditMode) {\n            console.log('OVER HERE!!', this.inputRef);\n            this.inputRef.current.focus();\n        }\n\n        return this.state.isEditMode ? (\n            <form className={css.form} onSubmit={this.handleSubmit}>\n                <input ref={this.inputRef} type=\"text\" value={this.state.inputValue} onChange={this.updateInputValue}/>\n                <button type=\"submit\"> update </button>\n            </form>\n        ) : (\n            <div className={css.listItem} key={itemNumber.toString()}>\n                <h4>{itemNumber + 1}. </h4>\n                <h3 onClick={() => this.editItem(item.text)}>{item.text}</h3>\n                <button className={css.doneButton} onClick={() => props.deleteItem(itemNumber)}>done</button>\n            </div>\n        )\n    }    \n}"]},"metadata":{},"sourceType":"module"}