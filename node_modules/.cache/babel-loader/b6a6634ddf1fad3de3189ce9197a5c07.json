{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexanderramirez/DEV/todoNicho/components/ListItem.js\";\nimport React, { Component } from 'react';\nimport css from '../static/css/index.css';\n\nvar ListItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListItem, _Component);\n\n  function ListItem(props) {\n    var _this;\n\n    _classCallCheck(this, ListItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ListItem).call(this, props));\n    _this.state = {\n      isEditMode: false,\n      editItem: {}\n    };\n    _this.editItem = _this.editItem.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.updateInputValue = _this.updateInputValue.bind(_assertThisInitialized(_this));\n    _this.inputRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(ListItem, [{\n    key: \"editItem\",\n    value: function editItem(item) {\n      var _this2 = this;\n\n      this.setState({\n        isEditMode: true,\n        editItem: item\n      }, function () {\n        _this2.inputRef.current.focus();\n      });\n    }\n  }, {\n    key: \"updateInputValue\",\n    value: function updateInputValue(e, item) {\n      item.text = e.target.value;\n      this.setState({\n        editItem: item\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      this.props.updateItem(this.inputRef);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          item = _this$props.item,\n          itemNumber = _this$props.itemNumber;\n      return this.state.isEditMode ? React.createElement(\"form\", {\n        className: css.form,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: this.inputRef,\n        type: \"text\",\n        value: this.state.inputValue,\n        onChange: this.updateInputValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \" update \")) : React.createElement(\"div\", {\n        className: css.listItem,\n        key: itemNumber.toString(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, itemNumber + 1, \". \"), React.createElement(\"h3\", {\n        onClick: function onClick() {\n          return _this3.editItem(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, item.text), React.createElement(\"button\", {\n        className: css.doneButton,\n        onClick: function onClick() {\n          return props.deleteItem(itemNumber);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"done\"));\n    }\n  }]);\n\n  return ListItem;\n}(Component);\n\nexport { ListItem as default };","map":{"version":3,"sources":["/Users/alexanderramirez/DEV/todoNicho/components/ListItem.js"],"names":["React","Component","css","ListItem","props","state","isEditMode","editItem","bind","handleSubmit","updateInputValue","inputRef","createRef","item","setState","current","focus","e","text","target","value","preventDefault","updateItem","itemNumber","form","inputValue","listItem","toString","doneButton","deleteItem"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,yBAAhB;;IAEqBC,Q;;;;;AACjB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIA,UAAKA,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,+BAAhB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB;AACA,UAAKE,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBF,IAAtB,+BAAxB;AACA,UAAKG,QAAL,GAAgBX,KAAK,CAACY,SAAN,EAAhB;AATe;AAUlB;;;;6BAEQC,I,EAAM;AAAA;;AACX,WAAKC,QAAL,CAAc;AACVR,QAAAA,UAAU,EAAE,IADF;AAEVC,QAAAA,QAAQ,EAAEM;AAFA,OAAd,EAGG,YAAM;AACL,QAAA,MAAI,CAACF,QAAL,CAAcI,OAAd,CAAsBC,KAAtB;AACH,OALD;AAMH;;;qCAEgBC,C,EAAGJ,I,EAAK;AACrBA,MAAAA,IAAI,CAACK,IAAL,GAAYD,CAAC,CAACE,MAAF,CAASC,KAArB;AACA,WAAKN,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAEM;AAAZ,OAAd;AACH;;;iCAEYI,C,EAAG;AACZA,MAAAA,CAAC,CAACI,cAAF;AACA,WAAKjB,KAAL,CAAWkB,UAAX,CAAsB,KAAKX,QAA3B;AACH;;;6BAEQ;AAAA;;AAAA,wBAID,KAAKP,KAJJ;AAAA,UAEDS,IAFC,eAEDA,IAFC;AAAA,UAGDU,UAHC,eAGDA,UAHC;AAML,aAAO,KAAKlB,KAAL,CAAWC,UAAX,GACH;AAAM,QAAA,SAAS,EAAEJ,GAAG,CAACsB,IAArB;AAA2B,QAAA,QAAQ,EAAE,KAAKf,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,GAAG,EAAE,KAAKE,QAAjB;AAA2B,QAAA,IAAI,EAAC,MAAhC;AAAuC,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWoB,UAAzD;AAAqE,QAAA,QAAQ,EAAE,KAAKf,gBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CADG,GAMH;AAAK,QAAA,SAAS,EAAER,GAAG,CAACwB,QAApB;AAA8B,QAAA,GAAG,EAAEH,UAAU,CAACI,QAAX,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,UAAU,GAAG,CAAlB,OADJ,EAEI;AAAI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAChB,QAAL,CAAcM,IAAd,CAAN;AAAA,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyCA,IAAI,CAACK,IAA9C,CAFJ,EAGI;AAAQ,QAAA,SAAS,EAAEhB,GAAG,CAAC0B,UAAvB;AAAmC,QAAA,OAAO,EAAE;AAAA,iBAAMxB,KAAK,CAACyB,UAAN,CAAiBN,UAAjB,CAAN;AAAA,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CANJ;AAYH;;;;EAlDiCtB,S;;SAAjBE,Q","sourcesContent":["import React, { Component } from 'react';\nimport css from '../static/css/index.css';\n\nexport default class ListItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isEditMode: false,\n            editItem: {}\n        };\n        this.editItem = this.editItem.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.updateInputValue = this.updateInputValue.bind(this);\n        this.inputRef = React.createRef();\n    }\n\n    editItem(item) {\n        this.setState({\n            isEditMode: true,\n            editItem: item\n        }, () => {\n            this.inputRef.current.focus();\n        });\n    }\n\n    updateInputValue(e, item){\n        item.text = e.target.value;\n        this.setState({ editItem: item });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.updateItem(this.inputRef);\n    }\n\n    render() {\n        const {\n            item,\n            itemNumber\n        } = this.props;\n\n        return this.state.isEditMode ? (\n            <form className={css.form} onSubmit={this.handleSubmit}>\n                <input ref={this.inputRef} type=\"text\" value={this.state.inputValue} onChange={this.updateInputValue}/>\n                <button type=\"submit\"> update </button>\n            </form>\n        ) : (\n            <div className={css.listItem} key={itemNumber.toString()}>\n                <h4>{itemNumber + 1}. </h4>\n                <h3 onClick={() => this.editItem(item)}>{item.text}</h3>\n                <button className={css.doneButton} onClick={() => props.deleteItem(itemNumber)}>done</button>\n            </div>\n        )\n    }    \n}"]},"metadata":{},"sourceType":"module"}